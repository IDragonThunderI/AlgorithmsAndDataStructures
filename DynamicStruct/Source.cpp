#include <iostream>
#include <cstring>
using namespace std;

// Инициализируем структуру с данными
struct Data {
	wchar_t surname[21]; 	// Фамилия
	wchar_t name[16]; 		// Имя
	int year[3]; 			// Дата рождения
	long long number; 		// Номер телефона
};

// Инициализируем управляющую структуру
struct NOTE {
	Data data;
	NOTE* next;	// Указатель на следующий элемент
};

// Добавление первого элемента структуры
NOTE* first() {
	NOTE* first = new NOTE;	// Создаём указатель для прохода по структуре

	wcout << L"\nВведите фамилию: ";
	wcin >> first->data.surname;

	wcout << L"\nВведите имя: ";
	wcin >> first->data.name;

	wcout << L"\nВведите дату рождения (ДД ММ ГГГГ): ";
	for (int j = 0; j < 3; j++) {
		wcin >> first->data.year[j];
	}

	wcout << L"\nВведите номер телефона (начиная с цифры 8): ";
	wcin >> first->data.number;

	first->next = NULL;		// Добавляем в конец пустой элемент

	return first;			// Возвращаем адрес указателя
}

/* Добавление элемента в конец структуры
	NOTE: Не используется в главной программе,
	т.к. есть более универсальная функция вставки элемента в любое место структуры */
void add(NOTE** pend) {
	NOTE* add = *pend; 		// Создаём указатель для прохода по структуре

	add->next = new NOTE;	// Создаём новый элемент на месте пустого
	add = add->next; 		// Перемещаем указатель на созданный элемент

	wcout << L"\nВведите фамилию: ";
	wcin >> add->data.surname;

	wcout << L"\nВведите имя: ";
	wcin >> add->data.name;

	wcout << L"\nВведите дату рождения (ДД ММ ГГГГ): ";
	for (int j = 0; j < 3; j++)
		wcin >> add->data.year[j];

	wcout << L"\nВведите номер телефона (начиная с цифры 8): ";
	wcin >> add->data.number;

	add->next = NULL;		// Добавляем в конец пустой элемент
	*pend = add;			// Перемещаем конечный указатель на созданный элемент
}

// Вставка нового элемента в любое место структуры
void insert(NOTE** pbegin, NOTE** pend) {
	NOTE* ins = new NOTE;	// Создаём указатель для прохода по структуре
	
	wcout << L"\nВведите фамилию: ";
	wcin >> ins->data.surname;

	wcout << L"\nВведите имя: ";
	wcin >> ins->data.name;

	wcout << L"\nВведите дату рождения (ДД ММ ГГГГ): ";
	for (int j = 0; j < 3; j++)
		wcin >> ins->data.year[j];

	wcout << L"\nВведите номер телефона (начиная с цифры 8): ";
	wcin >> ins->data.number;

	NOTE* t = *pbegin;	// Создаём указатель на начало места вставки

	/* Если первые три цифры телефона вставляемого сотрудника меньше, чем у первого сотрудника,
		то вставляем созданный элемент в начало структуры */
	if ((t->data.number / 100000000) > (ins->data.number / 100000000))  {
		ins->next = t;	// Перемещаем начальный элемент на следующую позицию
		*pbegin = ins;	// Премещаем начальный указатель на вставленный элемент
		return;			// Выходим из функции
	}

	NOTE* t1 = t->next;	// Создаём указатель на конец места вставки

	// Ищем место вставки среди элементов структуры
	while (t1) {
		/* Если первые три цифры телефона вставляемого сотрудника больше, чем у предыдущего сотрудника,
			но меньше, чем у следующего сотрудника, то вставляем созданный элемент между этими двумя */
		if ((t->data.number / 100000000) < (ins->data.number / 100000000) && 
			(ins->data.number / 100000000) <= (t1->data.number / 100000000)) {
			t->next = ins;	// Вставляем созданный элемент следом за предыдущим сотрудником
			ins->next = t1;	// Перемещаем следующего за созданным сотрудника на следующее место
			return;			// Выходим из функции
		}

		t = t1;			// Сдвигаем указатель начала на следующий за ним элемент
		t1 = t1->next;	// Сдвигаем указатель конца на следующий за ним элемент
	}

	t->next = ins;		// Если не нашли место для вставки, то добавляем элемент в конец структуры
	ins->next = NULL;	// Добавляем в конец пустой элемент
	*pend = ins;		// Перемещаем конечный указатель на созданный элемент
}

// Вывод всех элементов структуры на экран
void print(NOTE* begin) {
	NOTE* prt = begin; // Создаём указатель для прохода по структуре

	// Выводим элементы, пока они не закончились
	while (prt) {
		wcout << L"\nФамилия: " << prt->data.surname;
		wcout << L"\nИмя: " << prt->data.name;
		wcout << L"\nДата рождения: ";
		for (int i = 0; i < 3; i++) {
			wcout << prt->data.year[i] << L".";
		}
		wcout << L"\nНомер телефона: " << prt->data.number << endl;
		prt = prt->next; // Сдвигаемся на следующий элемент
	}
}

// Поиск заданного элемента в структуре
void find(NOTE* begin) {
	NOTE* fnd = begin; // Создаём переменную для прохода по структуре

	wchar_t find_surname[21];

	wcout << L"\n-> Введите фамилию искомого сотрудника: ";
	wcin >> find_surname;
	// Ищем сотрудника
	while (fnd) {
		/* Посимвольно сравниваем фамилию искомого сотрудника
			с фамилиями сотрудников в списке данных структуры */
		if (wcscmp(find_surname, fnd->data.surname) == 0) {
			wcout << L"\nФамилия: " << fnd->data.surname;
			wcout << L"\nИмя: " << fnd->data.name;
			wcout << L"\nДата рождения: ";
			for (int i = 0; i < 3; i++) {
				wcout << fnd->data.year[i] << L".";
			}
			wcout << L"\nНомер телефона: " << fnd->data.number << endl;
			return; // Выходим из функции
		}

		fnd = fnd->next; // Сдвигаемся на следующий элемент
	}

	wcout << L"\nИскомый сотрудник не найден!" << endl;
	return; // Выходим из функции
}

int main() {
	string loc(strcat(setlocale(LC_ALL, ""), " > nul"));
    system(loc.replace(0, loc.find('.') + 1, "chcp ").c_str());

	NOTE* pbegin = first();	// Задаём начальный указатель на первый элемент
	NOTE* pend = pbegin; 	// Задаём конечный указатель на тот же элемент (т.к. он пока что один)

	wchar_t answer = L'\0';

	// Запрашиваем добавление нового сотрудника
	while (true) {
		wcout << L"\n-> Добавить нового сотрудника? (y/n): ";
		wcin >> answer;
		if (answer == L'n') break;
		if (answer == L'y') {
			insert(&pbegin, &pend);	// Вставка нового элемента структуры
			continue;
		}
		wcout << L"Некорректный ввод" << endl;
	}
	
	print(pbegin);	// Вывод всех сотрудников на экран
	find(pbegin); 	// Поиск сотрудника в списке

	return 0;
}
